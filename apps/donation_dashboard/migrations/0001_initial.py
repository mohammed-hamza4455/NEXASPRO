# Generated by Django 4.2.7 on 2025-07-21 13:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, help_text='Processing fees deducted', max_digits=8)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount after fees', max_digits=10)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('check', 'Check'), ('cash', 'Cash'), ('crypto', 'Cryptocurrency'), ('stock', 'Stock'), ('other', 'Other')], max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=200)),
                ('payment_processor', models.CharField(blank=True, max_length=100)),
                ('transaction_id', models.CharField(blank=True, max_length=200, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('frequency', models.CharField(choices=[('one_time', 'One Time'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='one_time', max_length=20)),
                ('donation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('is_tribute', models.BooleanField(default=False)),
                ('tribute_name', models.CharField(blank=True, max_length=200)),
                ('tribute_message', models.TextField(blank=True)),
                ('tribute_notify_email', models.EmailField(blank=True, max_length=254)),
                ('donor_message', models.TextField(blank=True)),
                ('public_comment', models.TextField(blank=True)),
                ('is_tax_deductible', models.BooleanField(default=True)),
                ('tax_receipt_sent', models.BooleanField(default=False)),
                ('tax_receipt_date', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, help_text='Donation source/channel', max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
                'ordering': ['-donation_date'],
            },
        ),
        migrations.CreateModel(
            name='DonationCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(blank=True, max_length=500)),
                ('campaign_type', models.CharField(choices=[('general', 'General Fund'), ('emergency', 'Emergency Response'), ('project', 'Specific Project'), ('memorial', 'Memorial Fund'), ('matching', 'Matching Gift'), ('peer_to_peer', 'Peer-to-Peer')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Target donation amount in USD', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('minimum_donation', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('suggested_amounts', models.JSONField(blank=True, default=list, help_text='List of suggested donation amounts')),
                ('total_raised', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('donor_count', models.PositiveIntegerField(default=0)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='campaigns/donations/')),
                ('video_url', models.URLField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('allow_anonymous', models.BooleanField(default=True)),
                ('allow_recurring', models.BooleanField(default=True)),
                ('send_thank_you_email', models.BooleanField(default=True)),
                ('social_share_title', models.CharField(blank=True, max_length=200)),
                ('social_share_description', models.CharField(blank=True, max_length=500)),
                ('manager', models.ForeignKey(limit_choices_to={'role__in': ['admin', 'donation']}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_donation_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donation Campaign',
                'verbose_name_plural': 'Donation Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('donor_type', models.CharField(choices=[('individual', 'Individual'), ('organization', 'Organization'), ('foundation', 'Foundation'), ('corporate', 'Corporate'), ('government', 'Government')], default='individual', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted'), ('prospect', 'Prospect')], default='active', max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('organization_name', models.CharField(blank=True, max_length=200)),
                ('organization_type', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "+999999999". Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')])),
                ('address_line1', models.CharField(blank=True, max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('mail', 'Mail'), ('no_contact', 'No Contact')], default='email', max_length=20)),
                ('communication_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually'), ('never', 'Never')], default='monthly', max_length=20)),
                ('can_send_marketing', models.BooleanField(default=True)),
                ('can_share_publicly', models.BooleanField(default=False)),
                ('anonymous_donations', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('interests', models.TextField(blank=True, help_text='Comma-separated interests')),
                ('notes', models.TextField(blank=True)),
                ('total_donated', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('donation_count', models.PositiveIntegerField(default=0)),
                ('first_donation_date', models.DateTimeField(blank=True, null=True)),
                ('last_donation_date', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(blank=True, help_text='How they found us', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='donation_dashboard.donor')),
            ],
            options={
                'verbose_name': 'Donor',
                'verbose_name_plural': 'Donors',
                'ordering': ['-total_donated', '-last_donation_date'],
            },
        ),
        migrations.CreateModel(
            name='RecurringDonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurring_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('failed', 'Failed')], default='active', max_length=20)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('check', 'Check'), ('cash', 'Cash'), ('crypto', 'Cryptocurrency'), ('stock', 'Stock'), ('other', 'Other')], max_length=20)),
                ('payment_token', models.CharField(blank=True, max_length=200)),
                ('payment_processor', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField()),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('total_donations', models.PositiveIntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('failed_attempts', models.PositiveIntegerField(default=0)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('send_notifications', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_donations', to='donation_dashboard.donationcampaign')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_donations', to='donation_dashboard.donor')),
            ],
            options={
                'verbose_name': 'Recurring Donation',
                'verbose_name_plural': 'Recurring Donations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DonationReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('tax_year', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generated', 'Generated'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('tax_deductible_amount', models.DecimalField(decimal_places=2, help_text='Amount eligible for tax deduction', max_digits=10)),
                ('organization_tax_id', models.CharField(blank=True, max_length=50)),
                ('receipt_file', models.FileField(blank=True, null=True, upload_to='receipts/')),
                ('receipt_html', models.TextField(blank=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('email_sent_date', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('donation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receipt', to='donation_dashboard.donation')),
            ],
            options={
                'verbose_name': 'Donation Receipt',
                'verbose_name_plural': 'Donation Receipts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='donation',
            name='campaign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donations', to='donation_dashboard.donationcampaign'),
        ),
        migrations.AddField(
            model_name='donation',
            name='donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='donation_dashboard.donor'),
        ),
    ]
