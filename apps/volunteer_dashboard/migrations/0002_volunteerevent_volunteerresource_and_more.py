# Generated by Django 4.2.7 on 2025-07-22 04:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('volunteer_dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='VolunteerEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('health_camp', 'Health Camp'), ('food_drive', 'Food Drive'), ('education', 'Education Event'), ('renovation', 'Renovation Project'), ('training', 'Training Workshop'), ('fundraising', 'Fundraising Event'), ('awareness', 'Awareness Campaign'), ('community', 'Community Outreach'), ('environmental', 'Environmental Initiative'), ('other', 'Other')], default='other', max_length=20)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed')], default='upcoming', max_length=15)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('location', models.CharField(max_length=300)),
                ('location_details', models.TextField(blank=True)),
                ('volunteers_needed', models.PositiveIntegerField(default=0)),
                ('requirements', models.TextField(blank=True, help_text='Special requirements or skills needed')),
                ('equipment_provided', models.TextField(blank=True, help_text='Equipment or materials provided')),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('is_featured', models.BooleanField(default=False)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('max_volunteers', models.PositiveIntegerField(blank=True, null=True)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.25)])),
                ('image', models.URLField(blank=True, help_text='Event image URL')),
                ('attachments', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Volunteer Event',
                'verbose_name_plural': 'Volunteer Events',
                'ordering': ['start_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('resource_type', models.CharField(choices=[('handbook', 'Handbook'), ('guide', 'Guide'), ('training', 'Training Material'), ('policy', 'Policy Document'), ('form', 'Form Template'), ('toolkit', 'Toolkit'), ('manual', 'Manual'), ('video', 'Video Resource'), ('presentation', 'Presentation'), ('other', 'Other')], default='other', max_length=20)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('volunteer', 'Volunteers Only'), ('coordinator', 'Coordinators Only'), ('admin', 'Admin Only')], default='volunteer', max_length=15)),
                ('file_url', models.URLField(blank=True, help_text='Direct link to the resource file')),
                ('file_size', models.CharField(blank=True, help_text='File size (e.g., 2.4 MB)', max_length=20)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('version', models.CharField(blank=True, max_length=20)),
                ('author', models.CharField(blank=True, max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_updated', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Volunteer Resource',
                'verbose_name_plural': 'Volunteer Resources',
                'ordering': ['-is_featured', '-last_updated', 'title'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerResourceAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'Viewed'), ('download', 'Downloaded')], default='view', max_length=10)),
                ('access_date', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='volunteer_dashboard.volunteerresource')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource Access',
                'verbose_name_plural': 'Resource Accesses',
                'ordering': ['-access_date'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerEventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('attended', 'Attended'), ('no_show', 'No Show'), ('cancelled', 'Cancelled')], default='registered', max_length=15)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('hours_contributed', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('feedback', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=20)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('special_requirements', models.TextField(blank=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='volunteer_dashboard.volunteerevent')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event Registration',
                'verbose_name_plural': 'Event Registrations',
                'ordering': ['-registration_date'],
                'unique_together': {('volunteer', 'event')},
            },
        ),
        migrations.AddField(
            model_name='volunteerevent',
            name='volunteers_registered',
            field=models.ManyToManyField(related_name='registered_events', through='volunteer_dashboard.VolunteerEventRegistration', to=settings.AUTH_USER_MODEL),
        ),
    ]
